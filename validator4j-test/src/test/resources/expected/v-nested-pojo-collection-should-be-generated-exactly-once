package io.github.jenyaatnow.validator4j.test.source;

import io.github.jenyaatnow.validator4j.core.ValidatableObject;
import io.github.jenyaatnow.validator4j.core.ValidatableReference;
import io.github.jenyaatnow.validator4j.core.ValidationContext;
import io.github.jenyaatnow.validator4j.test.source.nested.VNestedPojoCollection;
import io.github.jenyaatnow.validator4j.util.Checks;


public final class VNestedPojoCollectionShouldBeGeneratedExactlyOnce extends ValidatableObject<NestedPojoCollectionShouldBeGeneratedExactlyOnce> {

    private final VNestedPojoCollection nestedPojoList;

    /**
     * Root object constructor.
     */
    public VNestedPojoCollectionShouldBeGeneratedExactlyOnce(final NestedPojoCollectionShouldBeGeneratedExactlyOnce value) {
        this(ValidatableReference.PATH_ROOT, value, ValidationContext.getInstance());

        Checks.nonNull(value, "value");
    }

    /**
     * Nested object constructor.
     */
    public VNestedPojoCollectionShouldBeGeneratedExactlyOnce(final String path, final NestedPojoCollectionShouldBeGeneratedExactlyOnce value, final ValidationContext ctx) {
        super(path, value, ctx);

        this.nestedPojoList = new VNestedPojoCollection(appendPath("nestedPojoList"), safeGet(value, NestedPojoCollectionShouldBeGeneratedExactlyOnce::getNestedPojoList), ctx);
    }

    public VNestedPojoCollection getNestedPojoList() {
        return nestedPojoList;
    }
}