package io.github.jenyaatnow.validator4j.sample.source;

import io.github.jenyaatnow.validator4j.core.ValidatableBoolean;
import io.github.jenyaatnow.validator4j.core.ValidatableByte;
import io.github.jenyaatnow.validator4j.core.ValidatableDate;
import io.github.jenyaatnow.validator4j.core.ValidatableDouble;
import io.github.jenyaatnow.validator4j.core.ValidatableFloat;
import io.github.jenyaatnow.validator4j.core.ValidatableInteger;
import io.github.jenyaatnow.validator4j.core.ValidatableLong;
import io.github.jenyaatnow.validator4j.core.ValidatableObject;
import io.github.jenyaatnow.validator4j.core.ValidatableReference;
import io.github.jenyaatnow.validator4j.core.ValidatableShort;
import io.github.jenyaatnow.validator4j.core.ValidatableString;
import io.github.jenyaatnow.validator4j.core.ValidationContext;
import io.github.jenyaatnow.validator4j.util.Checks;
import java.util.Date;


public final class VJavaTypesPojo extends ValidatableObject<JavaTypesPojo> {

    private final ValidatableBoolean booleanField;

    private final ValidatableByte byteField;

    private final ValidatableShort shortField;

    private final ValidatableInteger integerField;

    private final ValidatableLong longField;

    private final ValidatableFloat floatField;

    private final ValidatableDouble doubleField;

    private final ValidatableString stringField;

    private final ValidatableDate dateField;

    /**
     * Root object constructor.
     */
    public VJavaTypesPojo(final JavaTypesPojo value) {
        this(ValidatableReference.PATH_ROOT, value, ValidationContext.getInstance());

        Checks.nonNull(value, "value");
    }

    /**
     * Nested object constructor.
     */
    public VJavaTypesPojo(final String path, final JavaTypesPojo value, final ValidationContext ctx) {
        super(path, value, ctx);

        this.booleanField = new ValidatableBoolean(appendPath("booleanField"), safeGet(value, JavaTypesPojo::getBooleanField), ctx);
        this.byteField = new ValidatableByte(appendPath("byteField"), safeGet(value, JavaTypesPojo::getByteField), ctx);
        this.shortField = new ValidatableShort(appendPath("shortField"), safeGet(value, JavaTypesPojo::getShortField), ctx);
        this.integerField = new ValidatableInteger(appendPath("integerField"), safeGet(value, JavaTypesPojo::getIntegerField), ctx);
        this.longField = new ValidatableLong(appendPath("longField"), safeGet(value, JavaTypesPojo::getLongField), ctx);
        this.floatField = new ValidatableFloat(appendPath("floatField"), safeGet(value, JavaTypesPojo::getFloatField), ctx);
        this.doubleField = new ValidatableDouble(appendPath("doubleField"), safeGet(value, JavaTypesPojo::getDoubleField), ctx);
        this.stringField = new ValidatableString(appendPath("stringField"), safeGet(value, JavaTypesPojo::getStringField), ctx);
        this.dateField = new ValidatableDate(appendPath("dateField"), safeGet(value, JavaTypesPojo::getDateField), ctx);
    }

    public ValidatableBoolean getBooleanField() {
        return booleanField;
    }

    public ValidatableByte getByteField() {
        return byteField;
    }

    public ValidatableShort getShortField() {
        return shortField;
    }

    public ValidatableInteger getIntegerField() {
        return integerField;
    }

    public ValidatableLong getLongField() {
        return longField;
    }

    public ValidatableFloat getFloatField() {
        return floatField;
    }

    public ValidatableDouble getDoubleField() {
        return doubleField;
    }

    public ValidatableString getStringField() {
        return stringField;
    }

    public ValidatableDate getDateField() {
        return dateField;
    }
}