package io.github.jenyaatnow.validator4j.sample.source;

import io.github.jenyaatnow.validator4j.core.ValidatableCollection;
import io.github.jenyaatnow.validator4j.core.ValidatableObject;
import io.github.jenyaatnow.validator4j.core.ValidatableReference;
import io.github.jenyaatnow.validator4j.core.ValidationContext;
import io.github.jenyaatnow.validator4j.sample.source.SampleEnum;
import io.github.jenyaatnow.validator4j.util.Checks;
import java.util.Date;


public final class VCollectionsOfJavaTypesPojo extends ValidatableObject<CollectionsOfJavaTypesPojo> {

    private final ValidatableCollection<Boolean> booleans;

    private final ValidatableCollection<Byte> bytes;

    private final ValidatableCollection<Short> shorts;

    private final ValidatableCollection<Integer> integers;

    private final ValidatableCollection<Long> longs;

    private final ValidatableCollection<Float> floats;

    private final ValidatableCollection<Double> doubles;

    private final ValidatableCollection<String> strings;

    private final ValidatableCollection<Date> dates;

    private final ValidatableCollection<SampleEnum> enums;

    /**
     * Root object constructor.
     */
    public VCollectionsOfJavaTypesPojo(final CollectionsOfJavaTypesPojo value) {
        this(ValidatableReference.PATH_ROOT, value, ValidationContext.getInstance());

        Checks.nonNull(value, "value");
    }

    /**
     * Nested object constructor.
     */
    public VCollectionsOfJavaTypesPojo(final String path, final CollectionsOfJavaTypesPojo value, final ValidationContext ctx) {
        super(path, value, ctx);

        this.booleans = new ValidatableCollection<Boolean>(appendPath("booleans"), safeGet(value, CollectionsOfJavaTypesPojo::getBooleans), ctx);
        this.bytes = new ValidatableCollection<Byte>(appendPath("bytes"), safeGet(value, CollectionsOfJavaTypesPojo::getBytes), ctx);
        this.shorts = new ValidatableCollection<Short>(appendPath("shorts"), safeGet(value, CollectionsOfJavaTypesPojo::getShorts), ctx);
        this.integers = new ValidatableCollection<Integer>(appendPath("integers"), safeGet(value, CollectionsOfJavaTypesPojo::getIntegers), ctx);
        this.longs = new ValidatableCollection<Long>(appendPath("longs"), safeGet(value, CollectionsOfJavaTypesPojo::getLongs), ctx);
        this.floats = new ValidatableCollection<Float>(appendPath("floats"), safeGet(value, CollectionsOfJavaTypesPojo::getFloats), ctx);
        this.doubles = new ValidatableCollection<Double>(appendPath("doubles"), safeGet(value, CollectionsOfJavaTypesPojo::getDoubles), ctx);
        this.strings = new ValidatableCollection<String>(appendPath("strings"), safeGet(value, CollectionsOfJavaTypesPojo::getStrings), ctx);
        this.dates = new ValidatableCollection<Date>(appendPath("dates"), safeGet(value, CollectionsOfJavaTypesPojo::getDates), ctx);
        this.enums = new ValidatableCollection<SampleEnum>(appendPath("enums"), safeGet(value, CollectionsOfJavaTypesPojo::getEnums), ctx);
    }

    public ValidatableCollection<Boolean> getBooleans() {
        return booleans;
    }

    public ValidatableCollection<Byte> getBytes() {
        return bytes;
    }

    public ValidatableCollection<Short> getShorts() {
        return shorts;
    }

    public ValidatableCollection<Integer> getIntegers() {
        return integers;
    }

    public ValidatableCollection<Long> getLongs() {
        return longs;
    }

    public ValidatableCollection<Float> getFloats() {
        return floats;
    }

    public ValidatableCollection<Double> getDoubles() {
        return doubles;
    }

    public ValidatableCollection<String> getStrings() {
        return strings;
    }

    public ValidatableCollection<Date> getDates() {
        return dates;
    }

    public ValidatableCollection<SampleEnum> getEnums() {
        return enums;
    }
}