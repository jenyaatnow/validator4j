package io.github.jenyaatnow.validator4j.sample.source;

import io.github.jenyaatnow.validator4j.core.ValidatableBoolean;
import io.github.jenyaatnow.validator4j.core.ValidatableCollection;
import io.github.jenyaatnow.validator4j.core.ValidatableDouble;
import io.github.jenyaatnow.validator4j.core.ValidatableInteger;
import io.github.jenyaatnow.validator4j.core.ValidatableObject;
import io.github.jenyaatnow.validator4j.core.ValidatableReference;
import io.github.jenyaatnow.validator4j.core.ValidatableString;
import io.github.jenyaatnow.validator4j.core.ValidationContext;
import io.github.jenyaatnow.validator4j.sample.source.nested.VGenerationSourceNestedPojo;
import io.github.jenyaatnow.validator4j.util.Checks;


public final class VGenerationSourcePojo extends ValidatableObject<GenerationSourcePojo> {

    private final ValidatableString name;

    private final ValidatableDouble amount;

    private final ValidatableBoolean readyToGo;

    private final ValidatableCollection<Integer, ValidatableInteger> ids;

    private final VGenerationSourceNestedPojo nested;

    /**
     * Root object constructor.
     */
    public VGenerationSourcePojo(final GenerationSourcePojo value) {
        this(ValidatableReference.PATH_ROOT, value, ValidationContext.getInstance());

        Checks.nonNull(value, "value");
    }

    /**
     * Nested object constructor.
     */
    public VGenerationSourcePojo(final String path, final GenerationSourcePojo value, final ValidationContext ctx) {
        super(path, value, ctx);

        this.name = new ValidatableString(appendPath("name"), safeGet(value, GenerationSourcePojo::getName), ctx);
        this.amount = new ValidatableDouble(appendPath("amount"), safeGet(value, GenerationSourcePojo::getAmount), ctx);
        this.readyToGo = new ValidatableBoolean(appendPath("readyToGo"), safeGet(value, GenerationSourcePojo::getReadyToGo), ctx);
        this.ids = new ValidatableCollection<>(appendPath("ids"), safeGet(value, GenerationSourcePojo::getIds), ctx);
        this.nested = new VGenerationSourceNestedPojo(appendPath("nested"), safeGet(value, GenerationSourcePojo::getNested), ctx);
    }

    public ValidatableString getName() {
        return name;
    }

    public ValidatableDouble getAmount() {
        return amount;
    }

    public ValidatableBoolean getReadyToGo() {
        return readyToGo;
    }

    public ValidatableCollection<Integer, ValidatableInteger> getIds() {
        return ids;
    }

    public VGenerationSourceNestedPojo getNested() {
        return nested;
    }
}